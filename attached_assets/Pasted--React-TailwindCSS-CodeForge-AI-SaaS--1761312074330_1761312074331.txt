أنشئ تطبيق ويب احترافي باستخدام React وTailwindCSS باسم "CodeTolzy AI".
التطبيق عبارة عن أداة SaaS لتوليد وتعديل الأكواد البرمجية باستخدام الذكاء الاصطناعي.
يجب أن يتميز بتصميم عصري وواجهة سلسة تشبه VS Code.

🎯 المتطلبات العامة:

استخدم React + TailwindCSS + Vite كأساس المشروع.

استخدم Monaco Editor كمحرر أكواد رئيسي.

أضف واجهة Chat تفاعلية مع الذكاء الاصطناعي (على الجانب الأيسر أو في نافذة جانبية).

اربط النظام بـ OpenAI GPT API (باستخدام fetch أو axios) لتوليد وتعديل الأكواد.

صمّم التطبيق بحيث يكون متجاوبًا (Responsive) ويعمل على سطح المكتب والموبايل.

استخدم Framer Motion لتأثيرات الحركة السلسة على الأزرار والعناصر.

⚙️ الميزات الأساسية:

🧩 محرر الأكواد (Code Editor):

استخدم Monaco Editor بعرض كامل.

يدعم لغات متعددة: JavaScript, Python, HTML, CSS, React.

زر “Copy Code” و “Download Code” في الأعلى.

💬 دردشة الذكاء الاصطناعي (AI Chat Panel):

على الجانب الأيسر أو كنافذة جانبية يمكن فتحها/إغلاقها.

المستخدم يكتب أوامر مثل:

“أنشئ لي مكون React لتسجيل الدخول”

“عدّل الكود الحالي ليستخدم TailwindCSS”

الرد يظهر ككود داخل نافذة المحرر مباشرة.

⚡ الأزرار الأساسية:

“Generate Code” → يرسل الطلب إلى API لتوليد الكود الجديد.

“Edit Code” → يرسل الكود الحالي مع التعديل المطلوب.

“Clear” → يمسح المحرر والدردشة.

“Save” → يحفظ الكود محليًا (LocalStorage).

📂 حفظ الأكواد السابقة:

استخدم LocalStorage لعرض الأكواد السابقة في نافذة “History”.

كل كود يتم حفظه بعنوان ووصف قصير.

🌙 الوضع الليلي والنهاري (Dark / Light Mode):

زر لتبديل المظهر باستخدام Tailwind.

🧾 صفحات إضافية:

Home: تعريف الأداة وزر "ابدأ الآن".

Docs: تعليمات الاستخدام.

Pricing: خطط الاشتراك (Free / Pro).

Dashboard: إدارة المستخدمين والأكواد (لاحقًا).

🧠 تفاعل الذكاء الاصطناعي (API Flow):

عند الضغط على زر "Generate Code":

fetch("/api/generate", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    prompt: userInput,
    language: selectedLanguage,
    currentCode: editorContent,
  }),
});


الخادم (Node.js أو Next.js API Route) يرسل الطلب إلى:

https://api.openai.com/v1/chat/completions


باستخدام موديل "gpt-4o-mini" أو "gpt-4-turbo".

💎 التصميم (UI/UX):

استخدم تصميم يشبه VS Code:

خلفية رمادية غامقة (#1e1e1e)

ألوان نصية مريحة (رمادي، أزرق، بنفسجي)

أزرار مستديرة وزوايا 2xl

أضف شعار “⚡ CodeTolzy AI” في الأعلى.

استخدم خطوط Google Fonts مثل Inter أو Poppins.

أضف تأثيرات hover وshadow لطابع احترافي.

💰 نظام الربح المستقبلي:

أضف مكون Pricing فيه خطتين:

Free (10 طلبات شهريًا)

Pro (عدد غير محدود)

دعم الدفع لاحقًا عبر Stripe API.

📦 الهيكل المقترح للمشروع:
/src
 ├── components/
 │   ├── CodeEditor.jsx
 │   ├── ChatPanel.jsx
 │   ├── Header.jsx
 │   ├── HistoryPanel.jsx
 │   └── Pricing.jsx
 ├── pages/
 │   ├── Home.jsx
 │   ├── Docs.jsx
 │   ├── Dashboard.jsx
 ├── api/
 │   └── generate.js
 ├── App.jsx
 ├── main.jsx
 └── styles.css

✨ أهداف إضافية:

دعم اختصارات لوحة المفاتيح (Ctrl + Enter لتوليد الكود).

عرض عداد الاستهلاك (كم طلب متبقي للمستخدم المجاني).

إمكانية تصدير المشروع كملف ZIP.

واجهة بسيطة للـ Admin (لاحقًا).

🔚 مخرجات متوقعة:

تطبيق جاهز للعمل على localhost وVercel.

واجهة أنيقة + محرر تفاعلي + ربط فعّال مع الذكاء الاصطناعي.

إمكانية التطوير التجاري لاحقًا (SaaS جاهز للإطلاق).